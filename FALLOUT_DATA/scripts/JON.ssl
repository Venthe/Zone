procedure Start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure Zim00;
procedure Zim01;
procedure Zim02;
procedure Zim03;
procedure Zim03a;
procedure Zim04;
procedure Zim05;
procedure Zim06;
procedure Zim07;
procedure Zim08;
procedure Zim08a;
procedure Zim09;
procedure Zim10;
procedure Zim11;
procedure Zim12;
procedure Zim13;
procedure Zim14;
procedure Zim15;
procedure Zim16;
procedure Zim17;
procedure Zim18;
procedure Zim19;
procedure Zim20;
procedure Zim21;
procedure Zim22;
procedure Zim23;
procedure Zim24;
procedure Zim25;
procedure Zim26;
procedure Zim27;
procedure ZimEnd;

import variable JonPtr;

variable Initialize := 1;
variable DisplayMessage;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure Start
begin
	if (Initialize) then begin
		if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
			item_caps_adjust(self_obj, random(50, 150));
		end
		if (global_var(613) == 9103) then begin
			if (global_var(612) != 9003) then begin
				critter_add_trait(self_obj, 1, 6, 89);
			end
			else begin
				critter_add_trait(self_obj, 1, 6, 0);
			end
		end
		else begin
			critter_add_trait(self_obj, 1, 6, 49);
		end
		critter_add_trait(self_obj, 1, 5, 6);
		JonPtr := self_obj;
		Initialize := 0;
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(288, 176));
	end
	else begin
		display_msg(message_str(288, 175));
	end
end

procedure description_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(288, 176));
	end
	else begin
		display_msg(message_str(288, 175));
	end
end

procedure talk_p_proc
begin
	if (global_var(251) == 1) then begin
		float_msg(self_obj, message_str(669, random(100, 105)), 2);
	end
	else begin
		if ((local_var(4) == 1) and (get_critter_stat(dude_obj, 4) < 4)) then begin
			float_msg(self_obj, message_str(288, 139), 0);
		end
		else begin
			if (global_var(612) == 2) then begin
				float_msg(self_obj, message_str(288, random(183, 187)), 0);
			end
			else begin
				call get_reaction;
				start_gdialog(288, self_obj, -1, -1, -1);
				gsay_start;
				DisplayMessage := 100;
				if (local_var(4) == 0) then begin
					call Zim00;
				end
				else begin
					if (global_var(612) == 0) then begin
						call Zim01;
					end
					else begin
						if (obj_is_carrying_obj_pid(dude_obj, 238)) then begin
							if (global_var(612) == 9001) then begin
								call Zim24;
							end
							else begin
								call Zim27;
							end
						end
						else begin
							if (global_var(612) == 1) then begin
								call Zim17;
							end
							else begin
								if (global_var(612) == 9001) then begin
									call Zim19;
								end
								else begin
									if (global_var(612) == 9002) then begin
										call Zim21;
									end
								end
							end
						end
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		if (global_var(616) != 1) then begin
			set_global_var(251, 1);
			critter_add_trait(self_obj, 1, 6, 49);
		end
	end
end

procedure destroy_p_proc
begin
	if (source_obj == dude_obj) then begin
		if (global_var(616) != 1) then begin
			set_global_var(251, 1);
			critter_add_trait(self_obj, 1, 6, 49);
		end
		if (source_obj == dude_obj) then begin
			if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
				set_global_var(156, 1);
				set_global_var(157, 0);
			end
			if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
				set_global_var(157, 1);
				set_global_var(156, 0);
			end
			set_global_var(159, global_var(159) + 1);
			if ((global_var(159) % 2) == 0) then begin
				set_global_var(155, global_var(155) - 1);
			end
		end
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if ((global_var(613) == 9103) and (global_var(612) != 9003)) then begin
			critter_add_trait(self_obj, 1, 6, 89);
			float_msg(self_obj, message_str(288, 174), 2);
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
		else begin
			if (global_var(251) == 1) then begin
				attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
			end
		end
	end
	if (global_var(616) == 1) then begin
		critter_add_trait(self_obj, 1, 6, 89);
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure pickup_p_proc
begin
	set_global_var(251, 1);
end

procedure Zim00
begin
	DisplayMessage := 182;
	gsay_reply(288, 100);
	giq_option(4, 288, 181, Zim01, 50);
	giq_option(-3, 288, 104, Zim13, 50);
	set_local_var(4, 1);
end

procedure Zim01
begin
	gsay_reply(288, DisplayMessage);
	giq_option(4, 288, 101, Zim02, 50);
	giq_option(4, 288, 102, Zim14, 50);
	if (obj_is_carrying_obj_pid(dude_obj, 238)) then begin
		giq_option(4, 288, 178, Zim26, 50);
	end
	giq_option(4, 288, 103, ZimEnd, 50);
	giq_option(-3, 288, 104, Zim13, 50);
end

procedure Zim02
begin
	gsay_reply(288, 105);
	gsay_option(288, 106, Zim03, 50);
	gsay_option(288, 107, Zim03, 50);
	gsay_option(288, 108, Zim04, 50);
end

procedure Zim03
begin
	gsay_reply(288, 109);
	gsay_option(288, 110, Zim04, 50);
	gsay_option(288, 111, Zim13, 50);
	gsay_option(288, 112, Zim03a, 50);
end

procedure Zim03a
begin
	set_global_var(612, 1);
end

procedure Zim04
begin
	gsay_reply(288, 113);
	gsay_option(288, 114, Zim07, 50);
	gsay_option(288, 115, Zim05, 50);
	gsay_option(288, 116, Zim05, 50);
end

procedure Zim05
begin
	gsay_reply(288, 117);
	gsay_option(288, 118, Zim06, 50);
	gsay_option(288, 119, Zim07, 50);
end

procedure Zim06
begin
	gsay_reply(288, 120);
	gsay_option(288, 121, Zim07, 50);
	gsay_option(288, 122, Zim11, 50);
end

procedure Zim07
begin
	gsay_reply(288, 123);
	gsay_option(288, 124, Zim09, 50);
	gsay_option(288, 125, Zim08, 50);
	gsay_option(288, 126, Zim10, 50);
end

procedure Zim08
begin
	gsay_reply(288, 127);
	gsay_option(288, 128, Zim09, 50);
	gsay_option(288, 129, Zim10, 50);
	gsay_option(288, 130, Zim08a, 50);
end

procedure Zim08a
begin
	call BottomReact;
	set_global_var(612, 1);
end

procedure Zim09
begin
	gsay_reply(288, 131);
	gsay_option(288, 132, Zim10, 50);
	gsay_option(288, 133, Zim08a, 50);
	set_global_var(612, 1);
end

procedure Zim10
begin
	gsay_message(288, 134, 50);
	set_global_var(612, 9001);
end

procedure Zim11
begin
	gsay_reply(288, 135);
	gsay_option(288, 136, Zim16, 50);
	gsay_option(288, 137, Zim08a, 50);
end

procedure Zim12
begin
	gsay_message(288, 138, 50);
	call BottomReact;
	set_global_var(616, 1);
	gfade_out(600);
	move_to(dude_obj, 9097, 0);
	gfade_in(600);
end

procedure Zim13
begin
	gsay_message(288, 139, 50);
end

procedure Zim14
begin
	gsay_reply(288, 140);
	gsay_option(288, 141, Zim15, 50);
	gsay_option(288, 142, Zim12, 50);
end

procedure Zim15
begin
	gsay_reply(288, 143);
	gsay_option(288, 144, Zim03, 50);
	gsay_option(288, 145, Zim03, 50);
	gsay_option(288, 146, Zim04, 50);
	gsay_option(288, 147, Zim12, 50);
end

procedure Zim16
begin
	gsay_reply(288, 148);
	gsay_option(288, 149, Zim07, 50);
	gsay_option(288, 150, Zim07, 50);
	gsay_option(288, 151, Zim08a, 50);
end

procedure Zim17
begin
	gsay_reply(288, 152);
	gsay_option(288, 153, Zim18, 50);
	gsay_option(288, 154, Zim14, 50);
	gsay_option(288, 155, ZimEnd, 50);
end

procedure Zim18
begin
	gsay_message(288, 156, 50);
	set_global_var(612, 9001);
end

procedure Zim19
begin
	gsay_reply(288, 157);
	gsay_option(288, 158, Zim12, 50);
	gsay_option(288, 159, Zim20, 50);
	gsay_option(288, 160, Zim13, 50);
end

procedure Zim20
begin
	gsay_message(288, 161, 50);
end

procedure Zim21
begin
	gsay_reply(288, 162);
	gsay_option(288, 163, Zim22, 50);
	gsay_option(288, 164, Zim23, 50);
	gsay_option(288, 165, Zim22, 50);
	set_global_var(612, 2);
end

procedure Zim22
begin
	gsay_message(288, 166, 50);
	call TopReact;
	item_caps_adjust(dude_obj, 2000);
end

procedure Zim23
begin
	gsay_message(288, 167, 50);
	call TopReact;
	item_caps_adjust(dude_obj, 2500);
end

procedure Zim24
begin
	gsay_reply(288, 168);
	gsay_option(288, 169, Zim25, 50);
	gsay_option(288, 170, Zim26, 50);
end

procedure Zim25
begin
	gsay_reply(288, 171);
	gsay_option(288, 172, Zim26, 50);
end

procedure Zim26
begin
	variable LVar0 := 0;
	LVar0 := obj_carrying_pid_obj(dude_obj, 238);
	rm_obj_from_inven(dude_obj, LVar0);
	gsay_message(288, 173, 50);
	set_global_var(612, 9003);
	if (global_var(613) == 9102) then begin
		critter_add_trait(self_obj, 1, 6, 0);
		set_global_var(613, 9103);
	end
	else begin
		critter_add_trait(self_obj, 1, 6, 0);
	end
end

procedure Zim27
begin
	gsay_reply(288, 177);
	gsay_option(288, 178, Zim26, 50);
	gsay_option(288, 179, ZimEnd, 50);
end

procedure ZimEnd
begin
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(155) > 0) then begin
				set_local_var(0, local_var(0) + global_var(155));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(155));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(155));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(155));
			end
		end
		if (global_var(158) > 2) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(634, random(100, 105));
end

